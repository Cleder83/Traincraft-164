buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

apply plugin: 'forge'

// define the properties file
ext.configFile = file "project.properties"
configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

def buildnumber = System.getenv("BUILD_NUMBER")
version = "${config.mod_version_major}." + "${config.mod_version_minor}." + "${config.mod_revision}_" + (buildnumber ?: "homebrew")
group= "${config.group_id}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.mod_id}"


minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    //runDir = "run" // use in 1.7.2 and later versions
}


sourceSets {
    main {
        java {
            srcDir 'src/api/java'
            srcDir 'src/main/java'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.java
    appendix = 'deobf'
}

artifacts {
    archives deobfJar
}

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = true
    }
}
